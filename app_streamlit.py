import streamlit as st
import requests
import json

# Barre lat√©rale
st.sidebar.title("Pr√©diction de la Progression du Diab√®te")
st.sidebar.write("Cette application utilise un mod√®le de r√©gression pour pr√©dire la progression du diab√®te en fonction de plusieurs indicateurs m√©dicaux.")

# Titre de l'application
st.title("ü©∫ Pr√©diction de la Progression du Diab√®te")

# Introduction
st.write("Veuillez entrer les donn√©es n√©cessaires pour la pr√©diction ci-dessous :")

# Cr√©er des colonnes pour organiser les entr√©es
col1, col2 = st.columns(2)

with col1:
    age = st.number_input('√Çge', min_value=0.0, help="√Çge du patient")
    sex = st.selectbox('Sexe', options=[0, 1], format_func=lambda x: 'Femme' if x == 0 else 'Homme', help="Sexe du patient (0: Femme, 1: Homme)")
    bmi = st.number_input('BMI (Indice de Masse Corporelle)', min_value=0.0, help="Indice de masse corporelle")
    bp = st.number_input('Pression Art√©rielle', min_value=0.0, help="Pression art√©rielle du patient")

with col2:
    s1 = st.number_input('S1: Taux de Cholest√©rol', min_value=0.0, help="Niveau de cholest√©rol du patient")
    s2 = st.number_input('S2: Lipoprot√©ines de Basse Densit√©', min_value=0.0, help="Niveau de lipoprot√©ines de basse densit√©")
    s3 = st.number_input('S3: Glyc√©mie', min_value=0.0, help="Niveau de glyc√©mie")
    s4 = st.number_input('S4: Lipoprot√©ines de Haute Densit√©', min_value=0.0, help="Niveau de lipoprot√©ines de haute densit√©")
    s5 = st.number_input('S5: Indice de Sensibilit√© √† l‚ÄôInsuline', min_value=0.0, help="Sensibilit√© √† l'insuline")
    s6 = st.number_input('S6: Taux de Triglyc√©rides', min_value=0.0, help="Niveau de triglyc√©rides")

# Bouton pour soumettre les donn√©es
if st.button("üîç Pr√©dire la Progression du Diab√®te"):
    # Cr√©er un dictionnaire avec les donn√©es
    input_data = {
        "age": age,
        "sex": sex,
        "bmi": bmi,
        "bp": bp,
        "s1": s1,
        "s2": s2,
        "s3": s3,
        "s4": s4,
        "s5": s5,
        "s6": s6
    }

    # Convertir en JSON
    input_json = json.dumps(input_data)

    # Envoyer la requ√™te √† l'API
    api_url = "http://127.0.0.1:8000/predict"  # L'URL de ton API FastAPI
    response = requests.post(api_url, data=input_json, headers={"Content-Type": "application/json"})

    # Afficher la pr√©diction ou les erreurs
    if response.status_code == 200:
        st.success(f"‚ú® Pr√©diction de la progression du diab√®te : {response.text}")
    else:
        st.error("üö® Une erreur est survenue lors de la pr√©diction. Veuillez v√©rifier les donn√©es saisies ou r√©essayer plus tard.")
